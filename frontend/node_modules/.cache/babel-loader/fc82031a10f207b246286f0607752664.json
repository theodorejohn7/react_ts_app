{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getUserList } from \"../../services/userService\";\nconst initialState = {\n  isLoadingUsers: false\n};\nexport const userListSlice = createSlice({\n  name: \"userList\",\n  initialState,\n  reducers: {\n    start: state => {\n      return { ...state,\n        isLoadinUsers: true\n      };\n    },\n    success: (state, action) => {\n      return { ...state,\n        ...action.payload,\n        isLoadingUsers: false\n      };\n    },\n    error: (state, action) => {\n      return { ...state,\n        isLoadingUsers: false\n      };\n    }\n  }\n});\nexport const fetchUsers = () => async dispatch => {\n  dispatch(start());\n\n  try {\n    const userLists = await getUserList();\n    dispatch(success({\n      userList: userLists\n    }));\n  } catch (err) {\n    dispatch(error(err));\n  }\n};\nexport const {\n  start,\n  success,\n  error\n} = userListSlice.actions;\nexport const selectUserLists = state => state.userList;\nexport const usersListReducer = userListSlice.reducer;","map":{"version":3,"names":["createSlice","getUserList","initialState","isLoadingUsers","userListSlice","name","reducers","start","state","isLoadinUsers","success","action","payload","error","fetchUsers","dispatch","userLists","userList","err","actions","selectUserLists","usersListReducer","reducer"],"sources":["/home/dell/Desktop/Theo/REACT JS/react_ts_app/frontend/src/store/slice/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { getUserList } from \"../../services/userService\";\nimport { RootState } from \"../store\";\nimport { IUser } from \"../../utils/interface\";\n\nexport interface IUsersList {\n  isLoadingUsers: boolean;\n  userList?: IUser[];\n}\n\nconst initialState: IUsersList = { isLoadingUsers: false };\n\nexport const userListSlice = createSlice({\n  name: \"userList\",\n  initialState,\n  reducers: {\n    start: (state) => {\n      return {\n        ...state,\n        isLoadinUsers: true,\n      };\n    },\n    success: (state, action: PayloadAction<any>) => {\n      return {\n        ...state,\n        ...action.payload,\n        isLoadingUsers: false,\n      };\n    },\n    error: (state, action: PayloadAction<string>) => {\n      return {\n        ...state,\n        isLoadingUsers: false,\n      };\n    },\n  },\n});\n\nexport const fetchUsers = () => async (dispatch: any) => {\n  dispatch(start());\n  try {\n    const userLists = await getUserList();\n    dispatch(success({ userList: userLists }));\n  } catch (err:any) {\n    dispatch(error(err));\n  }\n};\n\nexport const { start, success, error } = userListSlice.actions;\nexport const selectUserLists = (state: RootState) => state.userList;\nexport const usersListReducer = userListSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,WAAT,QAA4B,4BAA5B;AASA,MAAMC,YAAwB,GAAG;EAAEC,cAAc,EAAE;AAAlB,CAAjC;AAEA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;EACvCK,IAAI,EAAE,UADiC;EAEvCH,YAFuC;EAGvCI,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAW;MAChB,OAAO,EACL,GAAGA,KADE;QAELC,aAAa,EAAE;MAFV,CAAP;IAID,CANO;IAORC,OAAO,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAuC;MAC9C,OAAO,EACL,GAAGH,KADE;QAEL,GAAGG,MAAM,CAACC,OAFL;QAGLT,cAAc,EAAE;MAHX,CAAP;IAKD,CAbO;IAcRU,KAAK,EAAE,CAACL,KAAD,EAAQG,MAAR,KAA0C;MAC/C,OAAO,EACL,GAAGH,KADE;QAELL,cAAc,EAAE;MAFX,CAAP;IAID;EAnBO;AAH6B,CAAD,CAAjC;AA0BP,OAAO,MAAMW,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAyB;EACvDA,QAAQ,CAACR,KAAK,EAAN,CAAR;;EACA,IAAI;IACF,MAAMS,SAAS,GAAG,MAAMf,WAAW,EAAnC;IACAc,QAAQ,CAACL,OAAO,CAAC;MAAEO,QAAQ,EAAED;IAAZ,CAAD,CAAR,CAAR;EACD,CAHD,CAGE,OAAOE,GAAP,EAAgB;IAChBH,QAAQ,CAACF,KAAK,CAACK,GAAD,CAAN,CAAR;EACD;AACF,CARM;AAUP,OAAO,MAAM;EAAEX,KAAF;EAASG,OAAT;EAAkBG;AAAlB,IAA4BT,aAAa,CAACe,OAAhD;AACP,OAAO,MAAMC,eAAe,GAAIZ,KAAD,IAAsBA,KAAK,CAACS,QAApD;AACP,OAAO,MAAMI,gBAAgB,GAAGjB,aAAa,CAACkB,OAAvC"},"metadata":{},"sourceType":"module"}